// <auto-generated />
using System;
using ApiService1.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ApiService1.Migrations
{
    [DbContext(typeof(ApiServiceDbContext))]
    partial class ApiServiceDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ApiService1.Entities.Project", b =>
                {
                    b.Property<int>("IdProject")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProject"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.HasKey("IdProject");

                    b.ToTable("Project");
                });

            modelBuilder.Entity("ApiService1.Entities.ProjectDetails", b =>
                {
                    b.Property<int>("IdProjectDetails")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProjectDetails"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("ProjectIdProject")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("UserIdUser")
                        .HasColumnType("int");

                    b.HasKey("IdProjectDetails");

                    b.HasIndex("ProjectIdProject");

                    b.HasIndex("UserIdUser");

                    b.ToTable("ProjectDetails");
                });

            modelBuilder.Entity("ApiService1.Entities.Role", b =>
                {
                    b.Property<int>("IdRole")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRole"));

                    b.Property<string>("AssignedBy")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("IdRole");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("ApiService1.Entities.User", b =>
                {
                    b.Property<int>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUser"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("RoleIdRole")
                        .HasColumnType("int");

                    b.Property<int>("UserDetailsIdUserDetails")
                        .HasColumnType("int");

                    b.HasKey("IdUser");

                    b.HasIndex("RoleIdRole");

                    b.HasIndex("UserDetailsIdUserDetails");

                    b.ToTable("User");
                });

            modelBuilder.Entity("ApiService1.Entities.UserDetails", b =>
                {
                    b.Property<int>("IdUserDetails")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUserDetails"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("IdUserDetails");

                    b.ToTable("UserDetails");
                });

            modelBuilder.Entity("ApiService1.Entities.ProjectDetails", b =>
                {
                    b.HasOne("ApiService1.Entities.Project", "IdProjectNavigation")
                        .WithMany("ProjectDetailsList")
                        .HasForeignKey("ProjectIdProject")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("ApiService1.Entities.User", "IdUserNavigation")
                        .WithMany("ProjectDetailsList")
                        .HasForeignKey("UserIdUser")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("IdProjectNavigation");

                    b.Navigation("IdUserNavigation");
                });

            modelBuilder.Entity("ApiService1.Entities.User", b =>
                {
                    b.HasOne("ApiService1.Entities.Role", "IdRoleNavigation")
                        .WithMany("Users")
                        .HasForeignKey("RoleIdRole")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("ApiService1.Entities.UserDetails", "IdUserDetailsNavigation")
                        .WithMany("Users")
                        .HasForeignKey("UserDetailsIdUserDetails")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("IdRoleNavigation");

                    b.Navigation("IdUserDetailsNavigation");
                });

            modelBuilder.Entity("ApiService1.Entities.Project", b =>
                {
                    b.Navigation("ProjectDetailsList");
                });

            modelBuilder.Entity("ApiService1.Entities.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("ApiService1.Entities.User", b =>
                {
                    b.Navigation("ProjectDetailsList");
                });

            modelBuilder.Entity("ApiService1.Entities.UserDetails", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
